# Import libraries
import pandas as pd
import numpy as pn
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MinMaxScaler
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Dropout
from tensorflow.keras.layers import Dropout
from sklearn.metrics import classification_report,confusion_matrix
df=pd.read_csv("cancer_classification.csv")

#exploratry data analysis 
df.describe().transpose()
sns.countplot(x="benign_0__mal_1", data=df)
df.corr()["benign_0__mal_1"][:-1].sort_values().plot(kind="bar")

#Train_test_split
X = df.drop("benign_0__mal_1", axis=1).values
y = df["benign_0__mal_1"].values
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25)
scaler = MinMaxScaler()
X_train=scaler.fit_transform(X_train)
X_test= scaler.transform(X_test)
X_train.shape

#Create the model
model = Sequential()
model.add(Dense(30,activation="relu"))
model.add(Dropout(0.5))
model.add(Dense(15,activation="relu"))
model.add(Dropout(0.5))
model.add(Dense(1,activation="sigmoid"))
model.compile(loss="binary_crossentropy", optimizer="adam")

#Run Model
model.fit(x=X_train, y=y_train, epochs=600, validation_data=(X_test,y_test),
        callbacks=[early_stop])
        
#visualize results
model_loss = pd.DataFrame(model.history.history)
model_loss.plot()
predictions=model.predict_classes(X_test)
print(classification_report(y_test,predictions))
print(confusion_matrix(y_test,predictions))
